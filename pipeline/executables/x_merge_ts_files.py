#!/usr/bin/env python
import os
import sys
import cPickle as cpkl
import glob 
import numpy as np
import AnisotropySearch as AS
import optparse 


usage = """
%prog TSPATH\n
TSPATH --- path to file in which to save the merged TS
"""
parser = optparse.OptionParser( usage = usage )

parser.add_option( '-m' , action='append' , dest='mergs' , nargs=2 , type = 'string' ,
                   help='two arguments: scale factor by which the ts is multiplied and the path to this ts' )

( options , args ) = parser.parse_args()

if len( args ) < 1 :
    parser.error( 'You must specify TSPATH! (generated by script_setup_merge_tss.py)' )
else :
    tspath = args[0]

Nmerg = len( options.mergs )

mergpaths = [ merg[1] for merg in options.mergs ]
files = [ open( mergpath , 'rb' ) for mergpath in mergpaths ]
tsdicts = [ cpkl.load( file ) for file in files ] ; [ file.close() for file in files ]

s1datas = [ float( options.mergs[k][0] ) * tsdicts[k]['1'].data for k in range( Nmerg ) ]
s2datas = [ float( options.mergs[k][0] ) * tsdicts[k]['2'].data for k in range( Nmerg ) ]
s3datas = [ float( options.mergs[k][0] ) * tsdicts[k]['3'].data for k in range( Nmerg ) ]

s1data = np.sum( np.array( s1datas ) , 0 )
s2data = np.sum( np.array( s2datas ) , 0 )
s3data = np.sum( np.array( s3datas ) , 0 )

t = tsdicts[0]['t']
tscale = { 'Offset1':t.Offset1 , 'Cadence1':t.Cadence1 }
s1 = AS.Coarsable( s1data , **tscale )
s2 = AS.Coarsable( s2data , **tscale )
s3 = AS.Coarsable( s3data , **tscale )

tsdict = { 't':t , '1':s1 , '2':s2 , '3':s3 }

tsdir = os.path.dirname( tspath )
if tsdir not in glob.glob( tsdir ) :
    os.system( 'mkdir -p %s' % tsdir )
file = open( tspath , 'wb' ) ; cpkl.dump( tsdict , file , -1 ) ; file.close()
    
