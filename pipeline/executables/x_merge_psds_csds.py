#!/usr/bin/env python
import os
import sys
import cPickle as cpkl
import glob 
import numpy as np
import AnisotropySearch as AS
import optparse

usage = """
$prog SETUP_MERGE_PSDS_CSDS.PKL\n
SETUP_MERGE_PSDS_CSDS.PKL --- setup up file for merging ( generated by script_merge_psds_csds.py )
"""
parser = optparse.OptionParser( usage = usage )

parser.add_option( '--merge_psds' , action='store_true' , help='Merge PSDs' )

parser.add_option( '--merge_csds' , action='store_true' , help='Merge CSDs' )

( options , args ) = parser.parse_args()

if len( args ) < 1 :
    parser.error( 'You must specify at least SETUP_MERGE_PSDS_CSDS.PKL!' )

file = open( args[0] , 'rb' ) ; setup = cpkl.load( file ) ; file.close()

execdir = setup['execdir']

mergs = setup['mergs']
days = setup['days']
Nb = setup['number of batches']

Ndays = len( days )
if Ndays % Nb == 0 :
    Ndb = Ndays / Nb
    days_batches = [ days[ b*Ndb : (b+1)*Ndb  ]  for b in range( Nb ) ]
elif Ndays % Nb > 0 :
    Ndb = Ndays / ( Nb-1 )
    Ndbl = Ndays % ( Nb-1 )
    days_batches = [ days[ b*Ndb : (b+1)*Ndb ] for b in range( Nb-1 ) ] + [ days[ (Nb-1)*Ndb : ] ]
else :
    raise Exception , "Both the number of days and number of batches have to be postivie integer!"

workdir = os.getcwd() + '/'

if options.merge_psds :
    print "Merging PSDs..."
    os.chdir( workdir )
    if 'x_merge_psds.py' not in glob.glob( 'x_merge_psds.py' ) :
        os.system( 'cp %s .' % ( execdir + 'x_merge_psds.py' ) )

    psddir = workdir + 'psd/'

    for b in range( Nb ) :
        print 'Processing batch %d' % ( b + 1 )
        commands = []
        for day in days_batches[ b ] :
            args_day = []
            for merg in mergs :
                if merg[0] == 'signal' :
                    args_day += [ merg[2] , merg[1] + 'd%03d.pkl' % day ]
                elif merg[0] == 'noise' :
                    args_day += [ merg[2] , merg[1] + 'd001.pkl' ]

            args_day += [ day ]
            commands += [ ( './x_merge_psds.py ' + '-m %e %s '*len(mergs) + psddir + 'd%03d.pkl\n' ) % tuple( args_day ) ]

        submitname = 'x_merge_psds_b%03d.sub' % ( b + 1 )
        file = open( submitname , 'w' )
        file.writelines( [ '#!/bin/bash\n' ,
                           '#PBS -N %s\n' % submitname ,
                           '#PBS -q compute\n' ,
                           '#PBS -j oe\n' ,
                           '#PBS -l nodes=1:ppn=1\n' ,
                           '#PBS -l walltime=5:00:00\n' ,
                           'cd $PBS_O_WORKDIR\n' ,
                           '\n' ] + commands ) ; file.close()
        
        os.system( 'qsub %s' % submitname )


if options.merge_csds :
    print "Merging CSDs..."
    os.chdir( workdir )
    if 'x_merge_csds.py' not in glob.glob( 'x_merge_csds.py' ) :
        os.system( 'cp %s .' % ( execdir + 'x_merge_csds.py' ) )

    csddir = workdir + 'csd/'

    for b in range( Nb ) :
        print 'Processing batch %d' % ( b + 1 )
        commands = []
        for day in days_batches[ b ] :
            args_day = []
            for merg in mergs :
                if merg[0] == 'signal' :
                    args_day += [ merg[2] , merg[1] + 'd%03d.pkl' % day ]
                elif merg[0] == 'noise' :
                    args_day += [ merg[2] , merg[1] + 'd001.pkl' ]

            args_day += [ day ]
            commands += [ ( './x_merge_csds.py ' + '-m %e %s '*len(mergs) + csddir + 'd%03d.pkl\n' ) % tuple( args_day ) ]

        submitname = 'x_merge_csds_b%03d.sub' % ( b + 1 )
        file = open( submitname , 'w' )
        file.writelines( [ '#!/bin/bash\n' ,
                           '#PBS -N %s\n' % submitname ,
                           '#PBS -q compute\n' ,
                           '#PBS -j oe\n' ,
                           '#PBS -l nodes=1:ppn=1\n' ,
                           '#PBS -l walltime=5:00:00\n' ,
                           'cd $PBS_O_WORKDIR\n' ,
                           '\n' ] + commands ) ; file.close()
        
        os.system( 'qsub %s' % submitname )
        
            
            
            
    
