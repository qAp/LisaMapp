#!/usr/bin/env python
import os
import sys
import cPickle as cpkl
import glob 
import numpy as np
import AnisotropySearch as AS
import optparse

usage = """
%prog SETUP_MERGE_TSS.PKL\n
SETUP_MERGE_TSS.PKL --- setup up file for merging ( generated by script_setup_merge_tss.py )
"""
parser = optparse.OptionParser( usage = usage )

( options , args ) = parser.parse_args()

if len( args ) < 1 :
    parser.error( 'You must specify at least SETUP_MERGE_TSS.PKL!' )

file = open( args[0] , 'rb' ) ; setup = cpkl.load( file ) ; file.close()

execdir = setup['execdir']

mergs = setup['mergs']
days = setup['days']
Nb = setup['number of batches']

Ndays = len( days )
if Ndays % Nb == 0 :
    Ndb = Ndays / Nb
    days_batches = [ days[ b*Ndb : (b+1)*Ndb  ]  for b in range( Nb ) ]
elif Ndays % Nb > 0 :
    Ndb = Ndays / ( Nb-1 )
    Ndbl = Ndays % ( Nb-1 )
    days_batches = [ days[ b*Ndb : (b+1)*Ndb ] for b in range( Nb-1 ) ] + [ days[ (Nb-1)*Ndb : ] ]
else :
    raise Exception , "Both the number of days and number of batches have to be postivie integer!"

workdir = os.getcwd() + '/'

print "Merging time-series..."
os.chdir( workdir )
os.system( 'cp %s .' % ( execdir + 'x_merge_ts_files.py' ) )

tsdir = workdir + '/data/'

for b in range( Nb ) :
    print 'Processing batch %d' % ( b + 1 )
    commands = []
    for day in days_batches[ b ] :
        args_day = []
        for merg in mergs :
            args_day += [ merg[2] , merg[1] + 'd%03d.pkl' % day ]
        args_day += [ day ]
        commands += [ ( './x_merge_ts_files.py ' + '-m %e %s '*len(mergs) + tsdir + 'd%03d.pkl\n' ) % tuple( args_day ) ]

    submitname = 'x_merge_ts_files_b%03d.sub' % ( b + 1 )
    file = open( submitname , 'w' )
    file.writelines( [ '#!/bin/bash\n' ,
                       '#PBS -N %s\n' % submitname ,
                       '#PBS -o x_merge_ts_files_b%03d.out\n' % ( b+1 )
                       '#PBS -q compute\n' ,
                       '#PBS -j oe\n' ,
                       '#PBS -l nodes=1:ppn=1\n' ,
                       '#PBS -l walltime=5:00:00\n' ,
                       'cd $PBS_O_WORKDIR\n' ,
                       '\n' ] + commands + [ 'echo done' ] ) ; file.close()
    
    os.system( 'qsub %s' % submitname )


